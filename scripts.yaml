stopwatch_reset:
  alias: Monitoring Stopwatch Reset
  sequence:
  - service: counter.reset
    data: {}
    entity_id: counter.monitoring_time
  mode: single
motion_stopwatch_reset:
  alias: Motion Stopwatch Reset
  sequence:
  - service: counter.reset
    data: {}
    entity_id: counter.motion_time_total_seconds
  mode: restart
button_press:
  alias: Button Press
  sequence:
  - service: automation.trigger
    target:
      entity_id: automation.presence_motion_is_detected
  - service: automation.trigger
    target:
      entity_id: automation.motion_finder_part_2
  mode: single
inst_cool_reset:
  alias: '[Inst Cool] Reset'
  sequence:
  - condition: numeric_state
    entity_id: counter.stage_inst_cool
    above: '0'
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: counter.stage_inst_cool
        above: '2'
      sequence:
      - service: automation.trigger
        data: {}
        target:
          entity_id:
          - automation.inst_cool_metrics_record_session_data
    default: []
  - service: counter.reset
    data: {}
    target:
      entity_id:
      - counter.inst_cool_this_session_total_time
      - counter.inst_cool_stage_idle_time
      - counter.inst_cool_longest_idle_time_this_session
  - service: counter.configure
    data:
      value: 1
    target:
      entity_id: counter.stage_inst_cool
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  mode: single
  icon: mdi:restart
vp_door_open:
  alias: '[VP] Door Open'
  sequence:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.inst_cool_door
  mode: restart
vp_stop_motion:
  alias: '[VP] Stop Motion'
  sequence:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.vp_ongoing_motion
  - service: script.turn_off
    data: {}
    target:
      entity_id: script.vp_door_close
  mode: restart
vp_door_close:
  alias: '[VP] Door Close'
  sequence:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.inst_cool_door
  mode: restart
vp_single_motion:
  alias: '[VP] Single Motion'
  sequence:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.inst_cool_motion
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.inst_cool_motion
  mode: single
mgmt_new_yerp_area:
  alias: 'MGMT: New YERP Area'
  sequence:
  - service: shell_command.yerp_copy_boilerplate
    data: {}
  - service: persistent_notification.create
    data:
      title: New YERP Area {{ states("input_text.yerp_new_area") }} Added
      message: New area *{{ states("input_text.yerp_new_area") }}* was just added,
        and will appear in your dashboard after Home Assistant is reset.
  mode: single
  icon: mdi:creation
yerp_boilerplate_update_sensors_every_second_while_spotting:
  alias: YERP [Boilerplate] Update duration inputs every second while spotting
  sequence:
  - repeat:
      while:
      - condition: state
        entity_id: input_boolean.yerp_boilerplate_this_session_spotting
        state: 'on'
      - condition: state
        entity_id: input_boolean.yerp_boilerplate_session_completed
        state: 'off'
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
        enabled: true
      - if:
        - condition: state
          entity_id: input_boolean.yerp_boilerplate_this_session_spotting
          state: 'on'
        - condition: state
          entity_id: input_boolean.yerp_boilerplate_session_completed
          state: 'off'
        then:
        - service: input_text.set_value
          data:
            value: "{% set this_activation_now = ( now().timestamp() | round ) %}{%
              set this_activation = states('input_text.yerp_boilerplate_this_session_activation_timestamp')
              | int(0)\n %}{% set session_duration = this_activation_now -\nthis_activation
              %}{{ session_duration }}"
          target:
            entity_id: input_text.yerp_boilerplate_this_session_duration_seconds
          alias: Set the session duration
        - if:
          - condition: state
            entity_id: input_boolean.yerp_boilerplate_session_active
            state: 'off'
          then:
          - service: input_text.set_value
            data:
              value: '{% set this_idle_now = ( now().timestamp() | round ) %}{% set
                this_idle_last = states(''input_text.yerp_boilerplate_this_session_idle_start_timestamp'')
                | int(0) %}{% set idle_duration = this_idle_now - this_idle_last %}{{
                idle_duration }}'
            target:
              entity_id: input_text.yerp_boilerplate_this_session_this_idle_duration_seconds
            alias: Set the idle duration
          - service: input_text.set_value
            data:
              value: '{% set this_idle = states(''input_text.yerp_boilerplate_this_session_this_idle_duration_seconds'')
                | int(0) %}{% set prev_max_idle = states(''input_text.yerp_boilerplate_this_session_max_idle_duration_seconds'')
                | int(0) %} {% if this_idle > prev_max_idle %} {{ this_idle }}  {%
                else %} {{ prev_max_idle }}  {% endif %}'
            target:
              entity_id: input_text.yerp_boilerplate_this_session_max_idle_duration_seconds
            alias: Set the session max idle duration
          alias: If Activity is Idle, set the Idle Duration and if needed set Max
            Idle
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
          enabled: true
        alias: If spotting is on
    alias: Repeat until Spotting ends
    enabled: true
  mode: single
yerp_boilerplate_reset_session:
  alias: YERP [Boilerplate] Reset Session
  sequence:
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_last_session_activation_datetime
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_last_spotting_deactivation_datetime
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_last_session_duration_seconds
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_last_session_max_idle_duration_seconds
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_duration_seconds
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_activation_timestamp
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_idle_start_timestamp
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_this_idle_duration_seconds
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_max_idle_duration_seconds
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.yerp_boilerplate_this_session_spotting
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.yerp_boilerplate_session_disabled
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.yerp_boilerplate_session_completed
  - service: input_select.select_option
    data:
      option: reset
    target:
      entity_id: input_select.yerp_boilerplate_session_status
  mode: single
yerp_boilerplate_reset_session_automatic:
  alias: YERP [Boilerplate] Reset Session (Automatic)
  sequence:
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_duration_seconds
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_activation_timestamp
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_idle_start_timestamp
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_this_idle_duration_seconds
  - service: input_text.set_value
    data:
      value: '0'
    target:
      entity_id:
      - input_text.yerp_boilerplate_this_session_max_idle_duration_seconds
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.yerp_boilerplate_this_session_spotting
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.yerp_boilerplate_session_disabled
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.yerp_boilerplate_session_completed
  mode: single
