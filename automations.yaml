- id: '1615254857237'
  alias: ZHA - Aqara Wireless Mini Switch
  description: ''
  use_blueprint:
    path: SeanM/zha-aqara-wireless-mini-switch.yaml
    input:
      aqara_mini_switch: 285e2c27177ffcb993cb0df0dd6484c0
      button_single_press:
      - service: script.button_press
- id: '1629867992728'
  alias: YERP Counter v0.21
  description: ''
  trigger:
  - platform: state
    entity_id: counter.stage
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '0'
      sequence:
      - service: automation.trigger
        target:
          entity_id: automation.reset
      - service: telegram_bot.send_message
        data:
          message: System turned off
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '1'
      sequence:
      - service: light.turn_on
        data:
          color_name: white
          brightness: 255
        target:
          area_id: bathroom
      - service: telegram_bot.send_message
        data:
          message: System turned on
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: light.turn_off
        target:
          area_id: bathroom
        data:
          transition: 9
      - delay:
          hours: 0
          minutes: 0
          seconds: 9
          milliseconds: 0
      - condition: state
        entity_id: binary_sensor.door_window_sensor_access_control_window_door_is_open
        state: 'off'
        for: 00:00:10
      - service: counter.increment
        target:
          entity_id: counter.stage
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '2'
      sequence:
      - service: light.turn_off
        target:
          area_id: bathroom
        data:
          transition: 1
      - wait_for_trigger:
        - type: motion
          platform: device
          device_id: bcadf1d1581710cc3709ac54ef1b02f4
          entity_id: binary_sensor.z_wave_pir_motion_sensor_any
          domain: binary_sensor
      - service: counter.increment
        target:
          entity_id: counter.stage
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '3'
      sequence:
      - service: light.turn_on
        target:
          device_id: 6634bd7f4f5366c83acf345b244b9e18
        data:
          color_name: green
          brightness_pct: 100
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.presence
      - service: automation.turn_off
        target:
          entity_id: automation.motion_stopwatch
      - service: script.turn_on
        data: {}
        entity_id: script.motion_stopwatch_reset
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '4'
      sequence:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.zzz_one_minute
      - service: light.turn_on
        data:
          flash: long
          color_name: yellow
        target:
          area_id: bathroom
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.zzz_one_minute
      - service: light.turn_on
        data:
          flash: long
          color_name: yellow
        target:
          area_id: bathroom
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '5'
      sequence:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.zzz_two_minutes_2
      - service: light.turn_on
        data:
          flash: long
        target:
          area_id: bathroom
      - type: turn_on
        device_id: 885bf667a223819b4fc20d18010c52b0
        entity_id: switch.siren_alarm
        domain: switch
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '6'
      sequence:
      - service: telegram_bot.send_message
        data:
          message: State level just reached 6
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '7'
      sequence:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.zzz_two_minutes
      - service: light.turn_on
        data:
          flash: long
          color_name: red
        target:
          area_id: bathroom
      - service: notify.persistent_notification
        data:
          title: Three minutes without motion
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '8'
      sequence:
      - service: telegram_bot.send_message
        data:
          message: State level just reached 8
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.alarm
      - service: script.siren
      - service: light.turn_on
        target:
          device_id: 6634bd7f4f5366c83acf345b244b9e18
        data:
          flash: long
          brightness_pct: 100
          color_name: white
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: counter.increment
        target:
          entity_id: counter.stage
      - service: script.turn_off
        target:
          entity_id: script.monitoring_ticker
      - service: script.turn_off
        target:
          entity_id: automation.motion_stopwatch
      - service: input_datetime.set_datetime
        data:
          datetime: '"{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}"'
        target:
          entity_id: input_datetime.alarm_is_triggered
    - conditions:
      - condition: state
        entity_id: counter.stage
        state: '9'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.alarm
    default: []
  mode: restart
- id: '1630338394811'
  alias: '[Inst 2] Incrementation - Bulb Colors'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.stage_inst_2
    id: Stage Change
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: counter.stage_inst_2
        below: '3'
        above: '1'
      sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.inst_2_blue
    - conditions:
      - condition: numeric_state
        entity_id: counter.stage_inst_2
        above: '2'
        below: '4'
      sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.inst_2_green
    - conditions:
      - condition: numeric_state
        entity_id: counter.stage_inst_2
        above: '4'
        below: '6'
      sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.inst_2_yellow
    - conditions:
      - condition: numeric_state
        entity_id: counter.stage_inst_2
        above: '6'
        below: '10'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.red
    default: []
  mode: restart
- id: '1630552633352'
  alias: '[Inst 2] Physical Sensors to Booleans'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.ecolink_pir_red_led_any
    id: Motion On
    to: 'on'
    from: 'off'
  - type: opened
    platform: device
    device_id: c9015e5ee53bdd5295767c6fd594a7b3
    entity_id: binary_sensor.door_window_sensor_access_control_window_door_is_open
    domain: binary_sensor
    id: Door is opened
  - platform: state
    entity_id: binary_sensor.ecolink_pir_red_led_any
    id: Motion Off
    to: 'off'
    from: 'on'
  - type: not_opened
    platform: device
    device_id: c9015e5ee53bdd5295767c6fd594a7b3
    entity_id: binary_sensor.door_window_sensor_access_control_window_door_is_open
    domain: binary_sensor
    id: Door is closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Door is opened
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.inst_2_door
        data: {}
    - conditions:
      - condition: trigger
        id: Motion On
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.inst_2_motion
        data: {}
    - conditions:
      - condition: trigger
        id: Motion Off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.inst_2_motion
    - conditions:
      - condition: trigger
        id: Door is closed
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.inst_2_door
    default: []
  mode: restart
- id: '1630992468671'
  alias: '[Inst 2] Incrementation - Seconds'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.inst_2_presence
    id: Presence
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.inst_2_yerp_on_off
    state: 'on'
  action:
  - repeat:
      while:
      - condition: numeric_state
        entity_id: counter.stage_inst_2
        above: '2'
        below: '8'
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.inst_2_this_session_total_time
      - condition: state
        entity_id: input_boolean.inst_2_motion
        state: 'off'
      - service: counter.increment
        data: {}
        target:
          entity_id:
          - counter.inst_2_stage_idle_time
  mode: single
- id: '1636434600570'
  alias: '[Inst 2] Interrupts - Stage 3 Motion'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.inst_2_motion
    to: 'on'
    id: Motion On
  - platform: state
    entity_id: input_boolean.inst_2_motion
    id: Motion Off
    to: 'off'
  condition:
  - condition: numeric_state
    entity_id: counter.stage_inst_2
    above: '1'
    below: '8'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Motion On
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.mock_bathroom_light
        data:
          flash: short
          brightness_pct: 100
          color_name: purple
      - service: light.turn_on
        data:
          color_name: green
          transition: 1
          flash: short
        target:
          entity_id: light.mock_bathroom_light
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.inst_2_presence
      - service: automation.turn_on
        target:
          entity_id: automation.inst_2_visit_seconds_incrementation
        data: {}
      - service: counter.configure
        target:
          entity_id: counter.stage_inst_2
        data:
          value: 3
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.inst_2_stage_idle_time
      - service: automation.trigger
        data:
          skip_condition: false
        target:
          entity_id: automation.inst_2_visit_seconds_incrementation
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.inst_2_presence
    default: []
  mode: restart
- id: '1636571529053'
  alias: '[Inst 2] Metrics - Record Session Data'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.inst_2_presence
    to: 'on'
    id: Presence On
    from: 'off'
  - platform: state
    entity_id: input_boolean.inst_2_presence
    to: 'off'
    id: Presence Off
    from: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Presence On
      sequence:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.inst_2_session_start_time
        data:
          datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
    - conditions:
      - condition: trigger
        id: Presence Off
      - condition: numeric_state
        entity_id: counter.stage_inst_2
        above: '2'
      sequence:
      - service: counter.configure
        data_template:
          entity_id: counter.inst_2_last_session_total_time
          value: '{{ states(''counter.inst_2_this_session_total_time'') | int }}'
      - service: counter.configure
        data_template:
          entity_id: counter.inst_2_last_session_final_stage
          value: '{{ states(''counter.stage_inst_2'') | int }}'
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.inst_2_session_end_time
        data:
          datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
    default: []
  mode: restart
- id: '1636574483658'
  alias: '[Inst 2] Light Animation - Standby'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.stage_inst_2
    to: '2'
  condition: []
  action:
  - repeat:
      until:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_number.inst_2_stage_time
          state: '2'
      sequence:
      - service: light.turn_on
        target:
          device_id: 7bed00ce60b78ec71813660796437932
        data:
          color_name: blue
          brightness_pct: 1
          transition: 3
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: light.turn_on
        target:
          entity_id: light.mock_bathroom_light_level_light_color_on_off
        data:
          transition: 3
          brightness_pct: 100
  mode: restart
- id: '1636574657810'
  alias: '[Inst 2] Light Animation - Stage 1'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.stage_inst_2
    to: '1'
  condition: []
  action:
  - repeat:
      until:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_number.inst_2_stage_time
          state: '1'
      sequence:
      - service: light.turn_on
        target:
          device_id: 7bed00ce60b78ec71813660796437932
        data:
          color_name: orange
          brightness_pct: 1
          transition: 3
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: light.turn_on
        target:
          entity_id: light.mock_bathroom_light_level_light_color_on_off
        data:
          transition: 3
          brightness_pct: 100
  mode: restart
- id: '1636679221778'
  alias: YERP! - Mappings
  description: ''
  use_blueprint:
    path: YERP/yerp-mappings.yaml
    input:
      door_device: binary_sensor.door_window_sensor_access_control_window_door_is_open
      door_boolean: input_boolean.inst_2_door
      motion_device: binary_sensor.ecolink_pir_red_led_any
      motion_boolean: input_boolean.inst_2_motion
      session_onoff1: input_boolean.inst_2_yerp_on_off
      stage_counter: counter.stage_inst_2
- id: '1642209450586'
  alias: '[Inst 2] Interrupts - Door Opens / Closes'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.inst_2_door
    to: 'on'
    id: Door Open
  - platform: state
    entity_id: input_boolean.inst_2_door
    to: 'off'
    id: Door Close
  condition:
  - condition: numeric_state
    entity_id: counter.stage_inst_2
    above: '0'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Door Open
      - condition: state
        entity_id: input_boolean.inst_2_yerp_on_off
        state: 'on'
      sequence:
      - service: automation.trigger
        target:
          entity_id:
          - automation.inst_2_metrics_record_session_start_end_times
          - automation.inst_2_test_notification
        data:
          skip_condition: false
      - service: script.inst_2_reset
        data: {}
    - conditions:
      - condition: trigger
        id: Door Close
      - condition: state
        entity_id: input_boolean.inst_2_yerp_on_off
        state: 'on'
      sequence:
      - service: counter.configure
        target:
          entity_id: counter.stage_inst_2
        data:
          value: 1
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.stage_inst_2
    default: []
  mode: restart
- id: '1650487034964'
  alias: '[Inst 2] Test Notification'
  description: ''
  trigger: []
  condition: []
  action:
  - service: notify.mobile_app_fluffphone
    data:
      message: Door was opened after {{ states('counter.inst_2_this_session_total_time')
        }} seconds. The longest gap between motion lasted for {{ states('counter.inst_2_longest_idle_time_this_session')
        }} seconds.
  mode: single
- id: '1651266094335'
  alias: '[Inst 2] On / Off'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.inst_2_yerp_on_off
    id: Turned Off
    to: 'off'
  - platform: state
    entity_id: counter.stage_inst_2
    id: Stage 1
    to: '1'
  - platform: state
    entity_id: input_boolean.inst_2_yerp_on_off
    id: Turned On
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Turned On
      sequence:
      - service: counter.configure
        target:
          entity_id: counter.stage_inst_2
        data:
          value: 1
      - service: counter.reset
        data: {}
        target:
          entity_id:
          - counter.inst_2_stage_idle_time
          - counter.inst_2_this_session_total_time
          - counter.inst_2_longest_idle_time_this_session
    - conditions:
      - condition: trigger
        id: Turned Off
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.inst_2_visit_seconds_incrementation
      - service: automation.trigger
        data: {}
        target:
          entity_id:
          - automation.inst_2_test_notification
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.inst_2_presence
      - service: light.turn_off
        target:
          entity_id: light.mock_bathroom_light_level_light_color_on_off
        data:
          transition: 1
      - service: counter.reset
        data: {}
        target:
          entity_id:
          - counter.inst_2_stage_idle_time
          - counter.inst_2_this_session_total_time
      - service: counter.configure
        data:
          value: 0
        target:
          entity_id: counter.stage_inst_2
    - conditions:
      - condition: trigger
        id: Stage 1
      - condition: state
        entity_id: input_boolean.inst_2_door
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 5
      - condition: state
        entity_id: input_boolean.inst_2_yerp_on_off
        state: 'on'
      sequence:
      - service: counter.reset
        data: {}
        target:
          entity_id:
          - counter.inst_2_stage_idle_time
          - counter.inst_2_this_session_total_time
          - counter.inst_2_longest_idle_time_this_session
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.inst_2_presence
        data: {}
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.inst_2_door
            state: 'off'
          sequence: []
        - conditions:
          - condition: state
            entity_id: input_boolean.inst_2_door
            state: 'on'
          sequence:
          - wait_for_trigger:
            - platform: state
              entity_id: input_boolean.inst_2_door
              to: 'off'
              for:
                hours: 0
                minutes: 0
                seconds: 5
        default: []
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.stage_inst_2
    default: []
  mode: restart
- id: '1651267021318'
  alias: '[VP] Auto Door'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.stage_inst_2
    id: Stage 3
    to: '3'
  condition:
  - condition: state
    entity_id: input_boolean.vp_ongoing_door
    state: 'on'
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{ range(0, 600)|random|int }}'
      milliseconds: 0
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.inst_2_door
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{ range(0, 15)|random|int }}'
      milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.inst_2_door
  mode: single
- id: '1651267712410'
  alias: '[VP] On/Off'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.vp_on_off
    to: 'on'
    id: VP On
  - platform: state
    entity_id: input_boolean.vp_on_off
    to: 'off'
    id: VP Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: VP On
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.vp_ongoing_door
          - input_boolean.vp_ongoing_motion
    - conditions:
      - condition: trigger
        id: VP Off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.inst_2_motion
          - input_boolean.vp_ongoing_motion
          - input_boolean.vp_ongoing_door
    default: []
  mode: restart
- id: '1651268287614'
  alias: '[Inst 2] Incrementation - Stages'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.inst_2_stage_idle_time
    to: input_number.inst_2_stage_length
  condition:
  - condition: numeric_state
    entity_id: counter.stage_inst_2
    above: '2'
    below: '8'
  action:
  - service: counter.increment
    target:
      entity_id: counter.stage_inst_2
    data: {}
  - service: counter.reset
    data: {}
    target:
      entity_id: counter.inst_2_stage_idle_time
  mode: restart
- id: '1651271489428'
  alias: '[Inst 2] Metrics - Longest Idle Time per Session'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.inst_2_total_idle_time
  condition:
  - condition: numeric_state
    entity_id: counter.inst_2_longest_idle_time_this_session
    below: sensor.inst_2_total_idle_time
  - condition: numeric_state
    entity_id: counter.stage_inst_2
    above: '2'
    below: '9'
  action:
  - service: counter.configure
    data_template:
      entity_id: counter.inst_2_longest_idle_time_this_session
      value: '{{ states(''sensor.inst_2_total_idle_time'') | int(0) }}'
  mode: restart
- id: '1651274273876'
  alias: '[VP] Auto Motion'
  description: ''
  trigger:
  - platform: state
    entity_id: counter.stage_inst_2
    id: Stage 2
    to: '2'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: counter.stage_inst_2
    id: Stage 3
    to: '3'
  condition:
  - condition: state
    entity_id: input_boolean.vp_ongoing_motion
    state: 'on'
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{ range(10, 45)|random|int }}'
      milliseconds: 0
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.inst_2_motion
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.inst_2_motion
  mode: restart
- id: '1651278090507'
  alias: '[Inst 2] Stage Count Incrementation'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.inst_2_stage_percent
    above: '99.99'
  condition: []
  action:
  - service: counter.increment
    data: {}
    target:
      entity_id: counter.stage_inst_2
  - service: counter.reset
    data: {}
    target:
      entity_id: counter.inst_2_stage_idle_time
  mode: restart
- id: '1651873195722'
  alias: YERP! South Server Status Notifications
  description: ''
  trigger:
  - platform: state
    entity_id:
    - !secret south
    to: connected
    id: Online
    from: reconnecting
  - platform: state
    entity_id:
    - !secret south
    to: reconnecting
    id: Offline
    from: connected
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Online
      sequence:
      - service: notify.mobile_app_fluffphone
        data:
          title: YERP! South Status
          message: Internet connection has been restored.
    - conditions:
      - condition: trigger
        id: Offline
      sequence:
      - service: notify.mobile_app_fluffphone
        data:
          title: YERP! South Status
          message: Internet connection has been lost.
    default: []
  mode: restart
