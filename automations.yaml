- id: '1664921368731'
  alias: YERP [boilerplate] Runtime
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.yerp_boilerplate_threshold_countdown
    alias: Threshold Expires
    id: Threshold Expires
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.yerp_boilerplate_warmup
    alias: Warmup Expires
    id: Warmup Expires
  - platform: state
    entity_id:
    - input_boolean.yerp_boilerplate_area_enabled
    alias: Area Enabled/Disabled
    id: Area Enabled/Disabled
  - platform: state
    entity_id:
    - input_select.yerp_boilerplate_spotting_status
    alias: Spotting Status Changes
    id: Spotting Status Changes
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_motion_ac02_iaszone
    alias: Activity Device State Changes
    id: Activity Device State Changes
    enabled: false
  - platform: state
    entity_id:
    - input_boolean.yerp_boilerplate_this_session_spotting
    id: This Session Spotting Changes
    alias: This Session Spotting Changes
  - platform: state
    entity_id:
    - input_boolean.yerp_boilerplate_gate_status
    id: Gate Status Changes
    alias: Gate Status Changes
  - platform: state
    entity_id:
    - input_boolean.yerp_boilerplate_session_active
    alias: Activity Entity State Changes
    id: Activity Entity State Changes
  - platform: state
    entity_id:
    - input_boolean.yerp_boilerplate_session_completed
    alias: Session Completed
    id: Session Completed
    to: 'on'
  - platform: homeassistant
    event: start
    id: HA Starts
  condition: []
  action:
  - if:
    - condition: trigger
      id: Activity Device State Changes
    then:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.lumi_lumi_motion_ac02_iaszone
          state: 'on'
        sequence:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.yerp_boilerplate_session_active
        - service: input_select.select_option
          target:
            entity_id: input_select.yerp_boilerplate_spotting_status
          data:
            option: active
      - conditions:
        - condition: state
          entity_id: binary_sensor.lumi_lumi_motion_ac02_iaszone
          state: 'off'
        sequence:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.yerp_boilerplate_session_active
        - service: input_select.select_option
          target:
            entity_id: input_select.yerp_boilerplate_spotting_status
          data:
            option: idle
    alias: Activity from device; relay to boolean
    enabled: false
  - if:
    - condition: state
      entity_id: input_boolean.yerp_boilerplate_area_enabled
      state: 'on'
    then:
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.yerp_boilerplate_session_status
          state: offline
        - condition: state
          entity_id: input_select.yerp_boilerplate_session_status
          state: warmup
      then:
      - service: input_select.select_option
        data:
          option: online
        target:
          entity_id: input_select.yerp_boilerplate_area_status
      - if:
        - condition: state
          entity_id: input_boolean.yerp_boilerplate_gate_status
          state: 'on'
          alias: Gated Status is ready
        - condition: or
          conditions:
          - condition: trigger
            id: Area Enabled/Disabled
          - condition: trigger
            id: Gate Status Changes
        then:
        - service: input_select.select_option
          data:
            option: warmup
          target:
            entity_id: input_select.yerp_boilerplate_session_status
        - service: timer.start
          data:
            duration: '{{ states(''input_number.yerp_boilerplate_warmup'') }}'
          target:
            entity_id: timer.yerp_boilerplate_warmup
      alias: If Session is Offline or Warmup
    - if:
      - condition: state
        entity_id: input_select.yerp_boilerplate_session_status
        state: spotting
      then:
      - if:
        - condition: trigger
          id: Threshold Expires
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.yerp_boilerplate_session_completed
        alias: If threshold expires, mark session as completed
      - if:
        - condition: trigger
          id: Activity Entity State Changes
        then:
        - choose:
          - conditions:
            - condition: state
              entity_id: input_boolean.yerp_boilerplate_session_active
              state: 'on'
              alias: If activity turned on
            sequence:
            - service: timer.cancel
              target:
                entity_id: timer.yerp_boilerplate_threshold_countdown
              data: {}
            - service: input_text.set_value
              data:
                value: '0'
              target:
                entity_id: input_text.yerp_boilerplate_this_session_this_idle_duration_seconds
          - conditions:
            - condition: state
              entity_id: input_boolean.yerp_boilerplate_session_active
              state: 'off'
              alias: If activity turned off
            sequence:
            - service: timer.start
              data:
                duration: '{{ states(''input_number.yerp_boilerplate_threshold'')
                  }}'
              target:
                entity_id: timer.yerp_boilerplate_threshold_countdown
            - if:
              - condition: state
                entity_id: input_boolean.yerp_boilerplate_this_session_spotting
                state: 'on'
              then:
              - service: input_text.set_value
                data:
                  value: '{{ now().timestamp() | round }}'
                target:
                  entity_id: input_text.yerp_boilerplate_this_session_idle_start_timestamp
          alias: Pick Activity on or off
        alias: If Activity Boolean changes
      - if:
        - condition: trigger
          id: Gate Status Changes
        - condition: state
          entity_id: input_boolean.yerp_boilerplate_gate_status
          state: 'off'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.yerp_boilerplate_session_completed
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.yerp_boilerplate_this_session_spotting
        - service: input_select.select_option
          data:
            option: userexit
          target:
            entity_id: input_select.yerp_boilerplate_session_status
        alias: If open/close triggers, set session to userexit
      alias: If Session is Spotting
    - if:
      - condition: state
        entity_id: input_select.yerp_boilerplate_session_status
        state: warmup
        alias: If Warmup
      then:
      - if:
        - condition: trigger
          id: Warmup Expires
        then:
        - if:
          - condition: state
            entity_id: input_select.yerp_boilerplate_activity_status
            state: active
          then:
          - wait_for_trigger:
            - platform: state
              entity_id:
              - input_select.yerp_boilerplate_activity_status
              to: idle
            alias: Wait until idle
          else: []
          alias: Check to see if activity status is on
        - service: input_select.select_option
          data:
            option: standby
          target:
            entity_id: input_select.yerp_boilerplate_session_status
        alias: If Warmup Expires, Advance
      alias: If Session is Warmup
    - if:
      - condition: state
        entity_id: input_select.yerp_boilerplate_session_status
        state: standby
      then:
      - if:
        - condition: trigger
          id: Activity Entity State Changes
        then:
        - if:
          - condition: state
            entity_id: input_boolean.yerp_boilerplate_session_active
            state: 'on'
          then:
          - service: input_select.select_option
            data:
              option: spotting
            target:
              entity_id: input_select.yerp_boilerplate_session_status
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.yerp_boilerplate_this_session_spotting
          - service: input_text.set_value
            target:
              entity_id: input_text.yerp_boilerplate_this_session_activation_timestamp
            data:
              value: '{{ now().timestamp() | round }}'
          - service: input_text.set_value
            target:
              entity_id: input_text.yerp_boilerplate_this_session_duration_seconds
            data:
              value: '0'
          - service: script.yerp_boilerplate_update_sensors_every_second_while_spotting
            data: {}
      - if:
        - condition: trigger
          id: Gate Status Changes
        - condition: state
          entity_id: input_boolean.yerp_boilerplate_gate_status
          state: 'off'
        then:
        - service: input_select.select_option
          data:
            option: warmup
          target:
            entity_id: input_select.yerp_boilerplate_session_status
      alias: If Session is Standby
    - if:
      - condition: trigger
        id: Gate Status Changes
      then:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.yerp_boilerplate_gate_status
            state: 'on'
            alias: If open/closed status is on, go to warmup
          sequence:
          - service: input_select.select_option
            target:
              entity_id: input_select.yerp_boilerplate_session_status
            data:
              option: warmup
          - service: timer.start
            data:
              duration: '{{ states(''input_number.yerp_boilerplate_warmup'') }}'
            target:
              entity_id: timer.yerp_boilerplate_warmup
        - conditions:
          - condition: state
            entity_id: input_boolean.yerp_boilerplate_gate_status
            state: 'off'
            alias: If open/closed status is off
          - condition: state
            entity_id: input_select.yerp_boilerplate_session_status
            state: spotting
            alias: If Spotting
          sequence:
          - service: timer.cancel
            target:
              entity_id: timer.yerp_boilerplate_warmup
            data: {}
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.yerp_boilerplate_session_completed
            alias: Mark Session as Completed
      alias: If Gate status changes
    alias: Area is On and Completed is Off
  - if:
    - condition: state
      entity_id: input_boolean.yerp_boilerplate_area_enabled
      state: 'off'
    then:
    - service: input_select.select_option
      target:
        entity_id: input_select.yerp_boilerplate_session_status
      data:
        option: offline
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.yerp_boilerplate_this_session_spotting
      data: {}
    - service: input_select.select_option
      data:
        option: offline
      target:
        entity_id: input_select.yerp_boilerplate_area_status
    - service: timer.cancel
      data: {}
      target:
        entity_id:
        - timer.yerp_boilerplate_warmup
        - timer.yerp_boilerplate_threshold_countdown
    - service: input_select.select_option
      data:
        option: offline
      target:
        entity_id: input_select.yerp_boilerplate_reason_for_deactivation
    alias: Area is Off
  - if:
    - condition: trigger
      id: Session Completed
    then:
    - service: timer.cancel
      data: {}
      target:
        entity_id:
        - timer.yerp_boilerplate_threshold_countdown
        - timer.yerp_boilerplate_warmup
      alias: Cancel out the timers
    - service: input_text.set_value
      data:
        value: '{{ states(''input_text.yerp_boilerplate_this_session_activation_timestamp'')
          | int(0) | timestamp_custom(''%Y-%m-%dT%H:%M:%S%z'') }}'
      target:
        entity_id: input_text.yerp_boilerplate_last_session_activation_datetime
      alias: Set Last Session's activation time
    - service: input_text.set_value
      data:
        value: '{{ now().timestamp() | int(0) | timestamp_custom(''%Y-%m-%dT%H:%M:%S%z'')
          }}'
      target:
        entity_id: input_text.yerp_boilerplate_last_spotting_deactivation_datetime
      alias: Set Last Session's completed time
    - service: input_text.set_value
      data:
        value: '{{ states(''input_text.yerp_boilerplate_this_session_max_idle_duration_seconds'')
          }}'
      target:
        entity_id: input_text.yerp_boilerplate_last_session_max_idle_duration_seconds
      alias: Set Last Session's Max Idle
    - service: input_text.set_value
      data:
        value: '{{ states(''input_text.yerp_boilerplate_this_session_duration_seconds'')
          }}'
      target:
        entity_id: input_text.yerp_boilerplate_last_session_duration_seconds
      alias: Set Last Session's Duration
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.yerp_boilerplate_this_session_spotting
    - service: input_select.select_option
      data:
        option: '{{ states(''input_select.yerp_boilerplate_session_status'') }}'
      target:
        entity_id: input_select.yerp_boilerplate_reason_for_deactivation
    - service: rest_command.update_nocodb_sessions
      continue_on_error: true
      data:
        sessionstart: '{{ states(''input_text.yerp_boilerplate_last_session_activation_datetime'')
          }}'
        sessionend: '{{ states(''input_text.yerp_boilerplate_last_spotting_deactivation_datetime'')
          }}'
        sessionlength: '{{ states(''input_text.yerp_boilerplate_last_session_duration_seconds'')
          }}'
        longestgap: '{{ states(''input_text.yerp_boilerplate_last_session_max_idle_duration_seconds'')
          }}'
        endtrigger: '{{ states(''input_select.yerp_reason_for_deactivation'') }}'
        suppliesused: ''
        calledems: ''
        area: boilerplate
      alias: Send Report to DB
    - if:
      - condition: state
        entity_id: input_select.yerp_boilerplate_session_status
        state: spotting
      then:
      - service: input_select.select_option
        data:
          option: seekinghelp
        target:
          entity_id: input_select.yerp_boilerplate_session_status
    - service: script.toggle
      data: {}
      target:
        entity_id: script.yerp_boilerplate_reset_session_automatic
    alias: Session Completed
  - if:
    - condition: trigger
      id: Gate Status Changes
    then:
    - if:
      - condition: state
        entity_id: input_boolean.yerp_boilerplate_gate_status
        state: 'off'
        alias: If Status is Off
      then:
      - if:
        - condition: state
          entity_id: input_boolean.yerp_boilerplate_this_session_spotting
          state: 'on'
        then:
        - service: timer.cancel
          data: {}
          target:
            entity_id:
            - timer.yerp_boilerplate_threshold_countdown
            - timer.yerp_boilerplate_warmup
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.yerp_boilerplate_session_completed
      - if:
        - condition: state
          entity_id: input_select.yerp_boilerplate_session_status
          state: warmup
        then:
        - service: timer.cancel
          data: {}
          target:
            entity_id: timer.yerp_boilerplate_warmup
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.yerp_boilerplate_session_completed
    - if:
      - condition: state
        entity_id: input_boolean.yerp_boilerplate_gate_status
        state: 'on'
        alias: If Status is On
      then:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.yerp_boilerplate_session_completed
    alias: Gate Status Changes
  - if:
    - condition: trigger
      id: HA Starts
    then:
    - service: input_text.reload
      data: {}
    - service: input_boolean.reload
      data: {}
  mode: parallel
  max: 20
- id: '1665447822166'
  alias: YERP [Blueprint] Hardware Configurator
  description: ''
  use_blueprint:
    path: YERP/area-configurator.yaml
    input:
      activity_state: binary_sensor.lumi_lumi_motion_ac02_iaszone
      gate_boolean: input_boolean.yerp_boilerplate_gate_status
      gate_state: binary_sensor.door_window_sensor_access_control_window_door_is_open
      activity_boolean: input_boolean.yerp_boilerplate_session_active
- id: '1665515881085'
  alias: YERP [boilerplate] Seeking Help Automation
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.yerp_boilerplate_session_status
    to: seekinghelp
  condition: []
  action:
  - service: notify.mobile_app_ipad
    data:
      title: YERP! Seeking Help
      message: Possibly unresponsive person in area, please check on them
      data:
        push:
          sound:
            name: Sherwood_Forest.caf
            critical: 1
            volume: 1
  - service: notify.twilio_voice
    data:
      message: Here is a notification.
      target: 18126798756
  mode: single
- id: '1665516822820'
  alias: YERP [boilerplate] Spotting Actions
  description: ''
  trigger:
  - platform: event
    event_type: timer.started
    event_data:
      entity_id: timer.yerp_boilerplate_warmup
    id: Warmup Begins
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.yerp_boilerplate_warmup
    id: Warmup Ends
  - platform: event
    event_type: timer.cancelled
    event_data:
      entity_id: timer.yerp_boilerplate_warmup
    id: Warmup is Canceled
  - platform: event
    event_type: timer.started
    event_data:
      entity_id: timer.yerp_boilerplate_threshold_countdown
    id: Spotting Begins
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.yerp_boilerplate_threshold_countdown
    id: Spotting Ends
  - platform: event
    event_type: timer.cancelled
    event_data:
      entity_id: timer.yerp_boilerplate_threshold_countdown
    id: Spotting is Canceled
  condition: []
  action:
  - if:
    - condition: trigger
      id: Warmup Begins
    then:
    - service: light.turn_on
      data:
        brightness_pct: 100
        flash: short
        rgb_color:
        - 179
        - 104
        - 0
      target:
        entity_id: light.mock_bathroom_light
  - if:
    - condition: trigger
      id: Warmup Ends
    then:
    - service: light.turn_on
      data:
        brightness_pct: 1
        rgb_color:
        - 0
        - 6
        - 179
      target:
        entity_id: light.mock_bathroom_light
  - if:
    - condition: or
      conditions:
      - condition: trigger
        id: Warmup is Canceled
      - condition: trigger
        id: Spotting is Canceled
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.mock_bathroom_light
  - if:
    - condition: trigger
      id: Spotting Begins
    then:
    - service: light.turn_on
      data:
        rgb_color:
        - 38
        - 128
        - 0
        brightness_pct: 10
      target:
        entity_id: light.mock_bathroom_light
    - delay:
        hours: 0
        minutes: 0
        seconds: 25
        milliseconds: 0
    - service: light.turn_on
      data:
        rgb_color:
        - 255
        - 194
        - 26
        brightness_pct: 25
        transition: 5
      target:
        entity_id: light.mock_bathroom_light
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: light.turn_on
      data:
        rgb_color:
        - 255
        - 0
        - 0
        brightness_pct: 25
        transition: 5
        flash: long
      target:
        entity_id: light.mock_bathroom_light
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
  - if:
    - condition: trigger
      id: Spotting Ends
    then:
    - service: light.turn_on
      data:
        rgb_color:
        - 255
        - 255
        - 255
        brightness_pct: 100
        transition: 5
        flash: short
      target:
        entity_id: light.mock_bathroom_light
  mode: restart
